- name: Assert that var hostapd_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: hostapd_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'hostapd_enabled' now has type '{{ hostapd_enabled | type_debug }}' and value '{{ hostapd_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var dnsmasq_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: dnsmasq_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'dnsmasq_enabled' now has type '{{ dnsmasq_enabled | type_debug }}' and value '{{ dnsmasq_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var bluetooth_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: bluetooth_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'bluetooth_enabled' now has type '{{ bluetooth_enabled | type_debug }}' and value '{{ bluetooth_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var sshd_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: sshd_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'sshd_enabled' now has type '{{ sshd_enabled | type_debug }}' and value '{{ sshd_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var tailscale_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: tailscale_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'tailscale_enabled' now has type '{{ tailscale_enabled | type_debug }}' and value '{{ tailscale_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var remoteit_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: remoteit_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'remoteit_enabled' now has type '{{ remoteit_enabled | type_debug }}' and value '{{ remoteit_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var admin_console_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: admin_console_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'admin_console_enabled' now has type '{{ admin_console_enabled | type_debug }}' and value '{{ admin_console_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var squid_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: squid_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'squid_enabled' now has type '{{ squid_enabled | type_debug }}' and value '{{ squid_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var cups_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: cups_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'cups_enabled' now has type '{{ cups_enabled | type_debug }}' and value '{{ cups_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var samba_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: samba_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'samba_enabled' now has type '{{ samba_enabled | type_debug }}' and value '{{ samba_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var usb_lib_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: usb_lib_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'usb_lib_enabled' now has type '{{ usb_lib_enabled | type_debug }}' and value '{{ usb_lib_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var azuracast_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: azuracast_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'azuracast_enabled' now has type '{{ azuracast_enabled | type_debug }}' and value '{{ azuracast_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var gitea_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: gitea_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'gitea_enabled' now has type '{{ gitea_enabled | type_debug }}' and value '{{ gitea_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var jupyterhub_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: jupyterhub_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'azuracast_enabled' now has type '{{ azuracast_enabled | type_debug }}' and value '{{ azuracast_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var lokole_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: lokole_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'lokole_enabled' now has type '{{ lokole_enabled | type_debug }}' and value '{{ lokole_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var mysql_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: mysql_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'mysql_enabled' now has type '{{ mysql_enabled | type_debug }}' and value '{{ mysql_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var mediawiki_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: mediawiki_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'mediawiki_enabled' now has type '{{ mediawiki_enabled | type_debug }}' and value '{{ mediawiki_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var mosquitto_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: mosquitto_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'mosquitto_enabled' now has type '{{ mosquitto_enabled | type_debug }}' and value '{{ mosquitto_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var nodejs_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: nodejs_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'nodejs_enabled' now has type '{{ nodejs_enabled | type_debug }}' and value '{{ nodejs_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var nodered_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: nodered_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'nodered_enabled' now has type '{{ nodered_enabled | type_debug }}' and value '{{ nodered_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var nextcloud_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: nextcloud_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'nextcloud_enabled' now has type '{{ nextcloud_enabled | type_debug }}' and value '{{ nextcloud_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var wordpress_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: wordpress_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'wordpress_enabled' now has type '{{ wordpress_enabled | type_debug }}' and value '{{ wordpress_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var kalite_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: kalite_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'kalite_enabled' now has type '{{ kalite_enabled | type_debug }}' and value '{{ kalite_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var kolibri_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: kolibri_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'kolibri_enabled' now has type '{{ kolibri_enabled | type_debug }}' and value '{{ kolibri_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var kiwix_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: kiwix_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'kiwix_enabled' now has type '{{ kiwix_enabled | type_debug }}' and value '{{ kiwix_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var postgresql_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: postgresql_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'postgresql_enabled' now has type '{{ postgresql_enabled | type_debug }}' and value '{{ postgresql_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var moodle_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: moodle_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'moodle_enabled' now has type '{{ moodle_enabled | type_debug }}' and value '{{ moodle_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var mongodb_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: mongodb_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'mongodb_enabled' now has type '{{ mongodb_enabled | type_debug }}' and value '{{ mongodb_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var sugarizer_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: sugarizer_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'sugarizer_enabled' now has type '{{ sugarizer_enabled | type_debug }}' and value '{{ sugarizer_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var osm_vector_maps_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: osm_vector_maps_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'osm_vector_maps_enabled' now has type '{{ osm_vector_maps_enabled | type_debug }}' and value '{{ osm_vector_maps_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var transmission_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: transmission_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'transmission_enabled' now has type '{{ transmission_enabled | type_debug }}' and value '{{ transmission_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var awstats_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: awstats_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'awstats_enabled' now has type '{{ awstats_enabled | type_debug }}' and value '{{ awstats_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var matomo_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: matomo_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'matomo_enabled' now has type '{{ matomo_enabled | type_debug }}' and value '{{ matomo_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var monit_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: monit_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'monit_enabled' now has type '{{ monit_enabled | type_debug }}' and value '{{ monit_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var munin_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: munin_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'munin_enabled' now has type '{{ munin_enabled | type_debug }}' and value '{{ munin_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var phpmyadmin_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: phpmyadmin_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'phpmyadmin_enabled' now has type '{{ phpmyadmin_enabled | type_debug }}' and value '{{ phpmyadmin_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var vnstat_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: vnstat_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'vnstat_enabled' now has type '{{ vnstat_enabled | type_debug }}' and value '{{ vnstat_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var yarn_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: yarn_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'yarn_enabled' now has type '{{ yarn_enabled | type_debug }}' and value '{{ yarn_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var captiveportal_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: captiveportal_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'captiveportal_enabled' now has type '{{ captiveportal_enabled | type_debug }}' and value '{{ captiveportal_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var internetarchive_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: internetarchive_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'internetarchive_enabled' now has type '{{ internetarchive_enabled | type_debug }}' and value '{{ internetarchive_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var luanti_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: luanti_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'luanti_enabled' now has type '{{ luanti_enabled | type_debug }}' and value '{{ luanti_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var calibreweb_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: calibreweb_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'calibreweb_enabled' now has type '{{ calibreweb_enabled | type_debug }}' and value '{{ calibreweb_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var calibre_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: calibre_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'calibre_enabled' now has type '{{ calibre_enabled | type_debug }}' and value '{{ calibre_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var pbx_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: pbx_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'pbx_enabled' now has type '{{ pbx_enabled | type_debug }}' and value '{{ pbx_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes

- name: Assert that var network_enabled is type boolean (NOT type string, which can invert logic!)
  assert:
    that: network_enabled | type_debug == 'bool'
    fail_msg: "VARIABLE MUST BE BOOLEAN: 'network_enabled' now has type '{{ network_enabled | type_debug }}' and value '{{ network_enabled }}' -- PLEASE SET A PROPER (UNQUOTED) ANSIBLE BOOLEAN VALUE e.g. IN: /etc/iiab/local_vars.yml"
    quiet: yes
